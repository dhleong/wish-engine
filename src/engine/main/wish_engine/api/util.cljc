(ns ^:no-doc wish-engine.api.util
  (:require [wish-engine.util :refer [throw-arg]]))

(defn flatten-lists
  "Call on a varargs list to support both the usual varargs invocation and
   passing in sequences, such as might be generated by `(map)` or a list
   comprehension"
  [fn-name valid? args]
  (mapcat (fn [f]
            (cond
              (and (sequential? f)
                   (every? valid? f)) f
              (and (not (sequential? f))
                   (valid? f)) [f]
              :else (throw-arg fn-name f)))
          args))
